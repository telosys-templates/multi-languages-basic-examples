${SHARP} Python class for entity ${entity.name} 
${SHARP} Created on $now.date ( $now.time )
#set( $env.language = 'Python' )

${SHARP}
${SHARP} This class defines the ${entity.name} object 
${SHARP}
 
class ${entity.name}:
	
	${SHARP} Default constructor.
	def __init__(self):
		pass

	${SHARP} Constructor with PK fields
	def __init__(self, $fn.argumentsList($entity.keyAttributes)):
		${SHARP} PK attributes
#foreach( $attribute in $entity.keyAttributes )
		self.$attribute.name = $attribute.name
#end
		${SHARP} Other attributes
#foreach( $attribute in $entity.nonKeyAttributes )
		self.$attribute.name = $attribute.ini
#end

	${SHARP} Standard function for string representation of the object
	def __str__(self):
		return ( '${entity.name}[' 
#foreach( $attribute in $entity.attributes )
#if ($foreach.count > 1 )#set($sep="|") #else #set($sep="") #end
		+ '${sep}${attribute.name}:' + str(self.${attribute.name})
#end
		+ ']')

print("Hello world! Let's play with ${entity.name} class" )
#set( $values = $fn.buildValues($entity.keyAttributes, 100) )
x = ${entity.name}($values.allValues)
print("${entity.name} : ", x)
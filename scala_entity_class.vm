/*
 * Scala class for entity "${entity.name}" 
 * Created on $now.date ( $now.time )
 * Generated by Telosys ( https://www.telosys.org/ ) version $generator.version
 */
##--------------------------------------------------------------------------------------------------
#set($env.language = "Scala")
#set($ROOT_PKG = "org.example") ## just for demo, supposed to be set in project configuration
## Data fields = fields not in Primary Key and not in selected Links    
#set( $dataFields = $entity.getAttributesByCriteria( $const.NOT_KEY, $const.NOT_IN_SELECTED_LINKS ) )
##--------------------------------------------------------------------------------------------------

// No package for test as Scala script or REPL command 
// package ${ROOT_PKG}.domain;

## imports for LocalDate, LocalTime, LocalDateTime if used in entity fields
#set($imports = {})
#foreach( $attrib in $entity.attributes )
#if ($attrib.type == "LocalDate"     )#set($imports["java.time.LocalDate"] = true)#end
#if ($attrib.type == "LocalTime"     )#set($imports["java.time.LocalTime"] = true)#end
#if ($attrib.type == "LocalDateTime" )#set($imports["java.time.LocalDateTime"] = true)#end
#end
#foreach($key in $imports.keySet() )
import $key
#end

class ${entity.name}() {

    // Entity Primary Key
#foreach( $attribute in $entity.keyAttributes )
    var ${attribute.name}: $attribute.type = $attribute.ini
#end

    // Entity other fields
#foreach( $attribute in $entity.nonKeyAttributes )
    var ${attribute.name}: $attribute.type = $attribute.ini
#end

    // Entity links (no links for tests in script mode)
#foreach( $link in $entity.selectedLinks )
    // var ${link.fieldName}: ${link.fieldType} = _
#end

    // Constructor with PK initialization
    def this($fn.argumentsListWithType($entity.keyAttributes)) = {
        this()
#foreach( $attribute in $entity.keyAttributes )
        this.${attribute.name} = ${attribute.name}
#end
    }

    // Set PK field(s)
    def setPK($fn.argumentsListWithType($entity.keyAttributes)) = { 
#foreach( $attribute in $entity.keyAttributes )
        this.${attribute.name} = ${attribute.name}
#end
    }

    // String representation of the object
    override def toString: String = {
        return ( "${entity.name}["
#foreach( $attribute in $entity.attributes )
#if ($foreach.count > 1 )#set($sep="|") #else #set($sep="") #end
          + "${sep}${attribute.name}:" + ${attribute.name}
#end
          + "]")
    }

}

// Just for test as script (to be removed in a real project)
println("Hello world! Let's play with ${entity.name} class" )
// New instance initialized with PK attributes
#set( $keyValues = $fn.buildValues($entity.keyAttributes, 1) )
var o = new ${entity.name}($keyValues.allValues)
println(o)
// Set values for non-key attributes
#set( $values = $fn.buildValues($entity.nonKeyAttributes, 1) )
#foreach( $attribute in $entity.nonKeyAttributes )
o.${attribute.name} = $values.getValue($attribute.name)
#end
println(o)

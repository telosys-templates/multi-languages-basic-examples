/*
 * Java bean class
 * Created on $now.date ( $now.time )
 * Generated by Telosys ( https://www.telosys.org/ ) version $generator.version
 */
## fake package (only for example)
package org.examples;
## in real project use the following syntax 
## package ${target.javaPackageFromFolder(${SRC})};

import java.io.Serializable;

#foreach( $import in $java.imports($entity.attributes) )
import $import;
#end

/**
 * Java bean class for entity "${entity.name}" 
 * 
 * @author Telosys
 *
 */
public class $entity.name implements Serializable
{
    private static final long serialVersionUID = 1L;

#foreach( $attribute in $entity.keyAttributes )
##    private $attribute.formattedType(10) $attribute.formattedName(12) #if($attribute.hasInitialValue())= ${attribute.initialValue} #end; // Id or Primary Key
    private $attribute.formattedType(10) $attribute.formattedName(12) = $attribute.ini ; // Id or Primary Key
#end

#foreach( $attribute in $entity.nonKeyAttributes )
##    private $attribute.formattedType(10) $attribute.formattedName(12) #if($attribute.hasInitialValue())= ${attribute.initialValue} #end;
    private $attribute.formattedType(10) $attribute.formattedName(12) = $attribute.ini ;
#end

    /**
     * Default constructor
     */
    public ${entity.name}() {
        super();
    }
    
    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR ID ATTRIBUTES (PRIMARY KEY )
    //----------------------------------------------------------------------
#foreach( $attribute in $entity.keyAttributes )
#if ( $attribute.setter )    
    /**
     * Set the "$attribute.name" attribute value
#if ( $attribute.databaseName )     * This attribute is mapped on the database column "$attribute.databaseName" ( type "$attribute.databaseType", NotNull : $attribute.isDatabaseNotNull() ) 
#end
     * @param $attribute.name
     */
	public void ${attribute.setter}( $attribute.type $attribute.name ) {
        this.$attribute.name = $attribute.name ;
    }
#end
#if ( $attribute.getter )    
    /**
     * Get the "$attribute.name" attribute value
#if ( $attribute.databaseName )     * This attribute is mapped on the database column "$attribute.databaseName" ( type "$attribute.databaseType", NotNull : $attribute.isDatabaseNotNull() ) 
#end
     * @return the attribute value
     */
	public $attribute.type ${attribute.getter}() {
        return this.$attribute.name;
    }
#end
#end

    //----------------------------------------------------------------------
    // GETTER(S) & SETTER(S) FOR OTHER DATA ATTRIBUTES
    //----------------------------------------------------------------------
#foreach( $attribute in $entity.nonKeyAttributes )
#if ( $attribute.setter )
    /**
     * Set the "$attribute.name" attribute value
#if ( $attribute.databaseName )     * This attribute is mapped on the database column "$attribute.databaseName" ( type "$attribute.databaseType", NotNull : $attribute.isDatabaseNotNull() ) 
#end
     * @param $attribute.name
     */
    public void ${attribute.setter}( $attribute.type $attribute.name ) {
        this.$attribute.name = $attribute.name;
    }
#end
#if ( $attribute.getter )
    /**
     * Get the "$attribute.name" attribute value
#if ( $attribute.databaseName )     * This attribute is mapped on the database column "$attribute.databaseName" ( type "$attribute.databaseType", NotNull : $attribute.isDatabaseNotNull() ) 
#end
     * @return the attribute value
     */
    public $attribute.type ${attribute.getter}() {
        return this.$attribute.name;
    }
#end

#end
    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    @Override
## toString with TABS
## $java.toStringMethod($entity, 1)
## toString with SPACES
$java.toStringMethod($entity, 1, '    ')
}

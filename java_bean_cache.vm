/*
 * Very basic cache for entity "${entity.name}" 
 * Created on $now.date ( $now.time )
 * Generated by Telosys ( https://www.telosys.org/ ) version $generator.version
 */
## fake package (only for example)
package org.examples;
## in real project use the following syntax 
## package ${target.javaPackageFromFolder(${SRC})};
#checkId($entity)

import java.util.HashMap;
import java.util.Map;

## import ${ROOT_PKG}.basic.bean.${entity.name} ;
#foreach( $import in $java.imports($entity.keyAttributes) )
import $import;
#end

/**
 * Very basic cache for ${entity.name} instances (just for Telosys demo)
 * 
 * @author Telosys
 *
 */
public class ${entity.name}Cache
{
	private static final Map<String,${entity.name}> cache = new HashMap<>() ;
	
#set ( $keyFields = $entity.keyAttributes )
	/**
	 * Build the cache key from the Primary Key attribute(s)
#foreach( $attribute in $keyFields ) 
     * @param ${attribute.name} 
#end	 
	 * @return the key
	 */
	private static final String getKey( $fn.argumentsListWithType($keyFields) ) {
		return "" #foreach( $attribute in $keyFields ) + ${attribute.name} #end ;
	}

	/**
	 * Put the given ${entity.name} instance in the cache
	 * @param ${entity.name} instance to be stored
	 */
#set ( $paramName = ${fn.uncapitalize($entity.name)} )
	public static final void put${entity.name}(${entity.name} ${paramName} ) {
		String key = getKey( $fn.argumentsListWithGetter( ${paramName}, $keyFields) ) ;
		cache.put(key, ${fn.uncapitalize($entity.name)} );
	}
	
	/**
	 * Get the ${entity.name} instance for the given primary key
#foreach( $attribute in $keyFields ) 
     * @param ${attribute.name} 
#end	 
	 * @return the ${entity.name} instance (or null if none)
	 */
	public static final ${entity.name} get${entity.name}( $fn.argumentsListWithType($keyFields) ) {
		String key = getKey( $fn.argumentsList($keyFields) ) ;
		return cache.get(key);
	}

	/**
	 * Removes the ${entity.name} associated with the given primary key
#foreach( $attribute in $keyFields ) 
     * @param ${attribute.name} 
#end	 
	 */
	public static final void remove${entity.name} ( $fn.argumentsListWithType($keyFields) ) {
		String key = getKey( $fn.argumentsList($keyFields) ) ;
		cache.remove(key);
	}
	
	/**
	 * Removes the given ${entity.name} from the cache using its primary key
	 * @param ${entity.name} instance to be removed
	 */
#set ( $paramName = ${fn.uncapitalize($entity.name)} )
	public static final void remove${entity.name} (${entity.name} ${paramName} ) { 
		String key = getKey( $fn.argumentsListWithGetter( ${paramName}, $keyFields) ) ;
		cache.remove(key);
	}

}

/*
 * Kotlin class for entity "${entity.name}" 
 * Created on $now.date ( $now.time )
 * Generated by Telosys ( https://www.telosys.org/ ) version $generator.version
 */
##--------------------------------------------------------------------------------------------------
#set($env.language = "Kotlin")
#set($ROOT_PKG = "org.example") ## just for demo, supposed to be set in project configuration
##--------------------------------------------------------------------------------------------------

package ${ROOT_PKG}.domain

## imports for LocalDate, LocalTime, LocalDateTime if used in entity fields
#set($imports = {})
#foreach( $attrib in $entity.attributes )
#if ($attrib.type.startsWith("BigDecimal")   )#set($imports["java.math.BigDecimal"] = true)#end
#if ($attrib.type.startsWith("LocalDate")    )#set($imports["java.time.LocalDate"] = true)#end
#if ($attrib.type.startsWith("LocalTime")    )#set($imports["java.time.LocalTime"] = true)#end
#if ($attrib.type.startsWith("LocalDateTime"))#set($imports["java.time.LocalDateTime"] = true)#end
#end
#foreach($key in $imports.keySet() )
import $key
#end

class ${entity.name}(
    // primary constructor for Primary Key
#foreach( $attribute in $entity.keyAttributes )
    var ${attribute.name}: $attribute.type#if($foreach.hasNext),#end
#end
    )
{
    // other fields  
#foreach( $attribute in $entity.nonKeyAttributes )
    var ${attribute.name}: $attribute.type = $attribute.ini
#end

    // Entity links (no links for tests in script mode)
#foreach( $link in $entity.selectedLinks )
    // var ${link.fieldName}: ${link.fieldType}? = null
#end

    // String representation of the object
    override fun toString() : String {
        return ( "${entity.name}["
#foreach( $attribute in $entity.attributes )
#if ($foreach.count > 1 )#set($sep="|") #else #set($sep="") #end
          + "${sep}${attribute.name}:" + ${attribute.name}
#end
          + "]")
    }

}

fun main() {
    // Just for test as script (to be removed in a real project)
    println("Hello world! Let's play with ${entity.name} class" )
    // New instance initialized with PK attributes (no "new" keyword in Kotlin)
#set( $keyValues = $fn.buildValues($entity.keyAttributes, 1) )
    val o = ${entity.name}($keyValues.allValues)
    println(o)
    // Set values for non-key attributes
#set( $values = $fn.buildValues($entity.nonKeyAttributes, 1) )
#foreach( $attribute in $entity.nonKeyAttributes )
    o.${attribute.name} = $values.getValue($attribute.name)
#end
    println(o)
}
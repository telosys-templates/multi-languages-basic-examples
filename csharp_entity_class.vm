// C# class for entity "${entity.name}" 
// Created on $now.date ( $now.time )
// Generated by Telosys ( https://www.telosys.org/ ) version $generator.version
#set( $env.language = 'C#' )
#set( $namespace = "MyNameSpace" )
// Target language is $env.language
using System;
#nullable enable

namespace $namespace
{
	public class $entity.name
	{
#foreach( $attribute in $entity.keyAttributes )
		public $attribute.formattedType(10) $attribute.formattedName(12) { get; set; } // Id or Primary Key
#end

#foreach( $attribute in $entity.nonKeyAttributes )
		public $attribute.formattedType(10) $attribute.formattedName(12) { get; set; } 
#end

		// Default constructor
		public ${entity.name}() 
		{
		}
		// Constructor with PK fields
		public ${entity.name}($fn.argumentsListWithType($entity.keyAttributes)) : this()
		{
#foreach( $attribute in $entity.keyAttributes )
			this.${attribute.name} = ${attribute.name} ;
#end
		}

$csharp.toStringMethod( $entity, 2 )
	}
}

// Just for test 
public class Program
{
	public static void Main()
	{
#set( $fullClassName = "${namespace}.${entity.name}" )
		Console.WriteLine("Hello World, this is a test with ${entity.name} class");
		$fullClassName x ;
		x = new ${fullClassName}();
		Console.WriteLine("Instance 1 : " + x.ToString());
#set( $values = $fn.buildValues($entity.keyAttributes, 100) )		
		x = new ${fullClassName}($values.allValues);
		Console.WriteLine("Instance 2 : " + x.ToString());
	}
}